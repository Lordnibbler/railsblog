services:
  # to start:    docker-compose up -d
  # to see logs: docker-compose logs -f db
  #
  # The Postgres image will:
  # 1.	On first startup (i.e. when db_data is empty) create your DB, then
  # 2.	Run anything in /docker-entrypoint-initdb.d (your restore.sh + backup.dump), then
  # 3.	Exit the init phase and start up normally with your data in place.
  db:
    image: postgres:17.4
    restart: always
    volumes:
      # your persistent data volume
      - db_data:/var/lib/postgresql/data
      # init scripts & dump
      - ./db/init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER:     postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB:       benradler-development
    ports:
      - "5432:5432"

  # Rails web server
  web:
    build:
      context: .
      args:
        RAILS_ENV: development
    command: bash -lc "bundle exec rails s -b 0.0.0.0"
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    depends_on:
      - db
      - webpack
    environment:
      DATABASE_URL: postgres://postgres:password@db:5432/benradler-development
      RAILS_ENV: development
      # so rails knows to bind assets host
      HOST: 0.0.0.0

      SHAKAPACKER_DEV_SERVER_HOST: webpack
      SHAKAPACKER_DEV_SERVER_PORT: 3035
      SHAKAPACKER_DEV_SERVER_PUBLIC: localhost:3035

  # Shakapacker webpack-dev-server
  webpack:
    build:
      context: .
      args:
        RAILS_ENV: development
    # command: bash -lc "bin/shakapacker-dev-server --host 0.0.0.0"
    command: bash -lc "bin/shakapacker-dev-server"
    volumes:
      - .:/app
    ports:
      - "3035:3035"
    environment:
      RAILS_ENV: development
      SHAKAPACKER_DEV_SERVER_HOST: "0.0.0.0"
      SHAKAPACKER_DEV_SERVER_PORT: "3035"
volumes:
  db_data:
