#
# [orb Search](https://circleci.com/developer/orbs?query=postgres&page=1&pageSize=15)
# [cimg search](https://circleci.com/developer/images)
# [Example config (with yarn caching, webpacker)](https://discuss.circleci.com/t/webpacker-compile-freezes-on-compile/33055)
# [Circleci provided example](https://github.com/CircleCI-Public/circleci-demo-ruby-rails/blob/master/.circleci/config.yml)
#
version: 2.1

orbs:
  ruby: circleci/ruby@1.3.0
  node: circleci/node@5.0.0
  browser-tools: circleci/browser-tools@1.2.3

jobs:
  build:
    environment:
      RAILS_ENV: test
      NODE_ENV: test
    docker:
      - image: cimg/ruby:3.1.0
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - run: ruby --version
      - ruby/install-deps
      - node/install:
          install-yarn: true
          node-version: '16.13'
      - run: node --version

  test:
    parallelism: 3
    docker:
      - image: cimg/ruby:3.1.0-node
      - image: cimg/node:16.13-browsers
      - image: cimg/postgres:14.1
        environment:
          POSTGRES_USER: benradler
          POSTGRES_DB: benradler-test
          POSTGRES_PASSWORD: ""
          POSTGRES_HOST_AUTH_METHOD: trust
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      PGHOST: 127.0.0.1
      PGUSER: benradler
      PGPASSWORD: ""
      RAILS_ENV: test
      NODE_ENV: test
      RAILS_HOST: 'http://localhost'
    steps:
      - checkout
      - ruby/install-deps
      - node/install:
          install-yarn: true
          node-version: '16.13'
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          command: |
            google-chrome --version
            chromedriver --version
          name: Check browsertools install

      - run:
          name: Setup dotenv
          command: cp .env.example .env

      - run:
          name: Wait for postgres to start
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: postgres setup
          command: cp config/database.yml.test config/database.yml && bundle exec rails db:schema:load --trace

      # restore yarn cache if available
      - restore_cache:
          keys:
            - yarn-{{ checksum "yarn.lock" }}

      # install node deps with yarn
      - run:
          name: Yarn install
          command: yarn install --cache-folder ~/.cache/yarn

      # save yarn cache
      - save_cache:
          key: yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      # restore webpack cache if available
      - restore_cache:
          keys:
            - webpack-{{ .Revision }}

      # webpacker compilation
      - run: bin/rails webpacker:compile

      # save webpacker cache
      - save_cache:
          key: webpack-{{ .Revision }}
          paths:
            - /home/circleci/project/public/packs-test/

      # Run rspec in parallel
      - ruby/rspec-test

      # run rubocop
      - ruby/rubocop-check

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
