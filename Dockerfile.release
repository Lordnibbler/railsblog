ARG RUBY_VERSION=3.3.8
FROM ruby:${RUBY_VERSION}

# 1) System dependencies + Node.js 22.x
RUN apt-get update -qq \
 && apt-get install -y --no-install-recommends \
      curl gnupg build-essential postgresql-client \
 && curl -fsSL https://deb.nodesource.com/setup_22.x | bash - \
 && apt-get install -y --no-install-recommends nodejs \
 && rm -rf /var/lib/apt/lists/*

# 2) Exact Yarn version
RUN npm install -g yarn@1.22.19

WORKDIR /app

# 3) Copy & install gems (skip dev/test in prod builds)
COPY Gemfile Gemfile.lock ./
ARG RAILS_ENV=production
ENV RAILS_ENV=${RAILS_ENV}
RUN if [ "$RAILS_ENV" = "production" ]; then \
      bundle config set without 'development test'; \
    fi \
 && bundle install --jobs=4

# 4) Copy & install JS dependencies (including devDeps)
COPY package.json yarn.lock ./
ENV YARN_PRODUCTION=false
RUN yarn install --frozen-lockfile

# 5) Copy application code
COPY . .

# 6) (Optional) Precompile assets in production
RUN if [ "$RAILS_ENV" = "production" ]; then \
      bundle exec rake assets:precompile; \
    fi

# 7) Default entrypoint: allow arbitrary commands (e.g. migrations, cache warming)
ENTRYPOINT ["bash", "-lc"]
# no CMD, so callers must specify what to run, e.g.:
#   docker run release-image \
#     bundle exec rails db:migrate && bundle exec rails cache_warmer:flickr
